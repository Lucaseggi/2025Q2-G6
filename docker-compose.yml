services:
  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"  # Main LocalStack port
    environment:
      - SERVICES=s3,ssm  # S3 for cache, SSM for secrets
      - DEBUG=1
      - DATA_DIR=/var/lib/localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - localstack-data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - rag-network

  rabbitmq:
    build:
      context: ./00-rabbitmq
      dockerfile: Dockerfile
    container_name: rabbitmq-server
    ports:
      - "5672:5672"     # AMQP port
      - "15672:15672"   # Management UI
    env_file:
      - ./00-rabbitmq/.env
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - rabbitmq-logs:/var/log/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rag-network

  opensearch:
    build: ./opensearch-db
    container_name: opensearch-node
    env_file:
      - ./opensearch-db/.env
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - rag-network

  scraper:
    build: ./01-scraper
    container_name: scraper
    ports:
      - "8003:8003"
    env_file:
      - ./01-scraper/.env
    depends_on:
      localstack:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - rag-network

  processor:
    build: ./02-processor
    container_name: processor
    env_file:
      - ./02-processor/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - rag-network

  embedder:
    build: ./03-embedder
    container_name: embedder
    ports:
      - "8001:8001"
    env_file:
      - ./03-embedder/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - rag-network

  inserter:
    build: ./04-inserter
    container_name: inserter
    env_file:
      - ./04-inserter/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - rag-network

  api:
    build: ./api
    container_name: api
    ports:
      - "8010:8000"
    env_file:
      - ./api/.env
    depends_on:
      opensearch:
        condition: service_healthy
      embedder:
        condition: service_started
    restart: unless-stopped
    networks:
      - rag-network

  # frontend:
  #   build: ./05-frontend-app
  #   container_name: frontend
  #   ports:
  #     - "5173:5173"
  #   env_file:
  #     - ./05-frontend-app/.env
  #   depends_on:
  #     api:
  #       condition: service_started
  #   restart: unless-stopped
  #   networks:
  #     - rag-network

volumes:
  localstack-data:
    driver: local
  rabbitmq-data:
    driver: local
  rabbitmq-logs:
    driver: local
  opensearch-data:
    driver: local
  django-data:
    driver: local

networks:
  rag-network:
    driver: bridge